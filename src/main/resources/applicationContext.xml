<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context-4.1.xsd">
            
     <context:annotation-config />
     <context:component-scan base-package="com.ibm.foodielover"
		use-default-filters="false">
		<context:include-filter type="regex"
			expression="com.ibm.foodielover.service.*" />
		<context:include-filter type="regex"
			expression="com.ibm.foodielover.dao.*" />
	 </context:component-scan>
	
<!-- 	 <task:annotation-driven />
	 <aop:aspectj-autoproxy /> -->
	 
	 <context:annotation-config />
	 <context:property-placeholder />


	<bean id="jdbcConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

      <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
	<!--  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
		<property name="driverClassName" value="com.ibm.db2.jcc.DB2Driver" />
		<property name="url" value="jdbc:db2://ibm384-pbv7v15.cn.ibm.com:50000/assetdb" />
		<property name="username" value="db2admin" />
		<property name="password" value="db2admin" />
		
		<!-- <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" /> -->
	</bean>

	<!-- 数据源配置
	<bean id="dataSource" class="com" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		请求超时时间
		<property name="checkoutTimeout" value="30000" />
		每60秒检查所有连接池中的空闲连接。默认值: 0，不检查
		<property name="idleConnectionTestPeriod" value="30" />
		连接数据库连接池最大空闲时间
		<property name="maxIdleTime" value="30" />
		连接池初始化连接数
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3
		<property name="acquireIncrement" value="5" />
	</bean> -->

	<bean id="foodieloverJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		abstract="false" lazy-init="false" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<!-- spring jdbc -->
	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean> -->

	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明式事务，事务拦截器 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<!-- 下面定义事务传播属性 -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="update">PROPAGATION_REQUIRED</prop>

				<prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- Bean后处理器BeanNameAutoProxyCreator，根据List配置创建事务代理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<!-- 下面是所有需要自动创建事务代理的bean -->
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<!-- 下面定义BeanNameAutoProxyCreator所需的事务拦截器 -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

</beans>